networks:
  training_network:
    driver: bridge

services:
  redis:
    image: redis
    container_name: redis_training
    restart: on-failure
    ports:
      - 6379:6379
    volumes:
      - ./.scripts/redis/config/redis.conf:/redis.conf
    command: redis-server /redis.conf
    networks:
      - training_network

  postgres:
    image: postgres
    container_name: postgres_training
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./.scripts/database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - training_network

  zookeeper:
    image: zookeeper
    container_name: zookeeper_training
    networks:
      - training_network

  kafka:
    image: bitnami/kafka
    container_name: kafka_training
    ports:
      - 9092:9092
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - training_network

  user-consumer:
    build:
      context: ./user-consumer
      dockerfile: Dockerfile
    container_name: user-consumer
    restart: on-failure
    ports:
      - 8081:8080
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - training_network
    env_file:
      - ./user-consumer/.env

  user-management:
    build:
      context: ./user-management
      dockerfile: Dockerfile
    container_name: user-management
    restart: on-failure
    ports:
      - 8082:8080
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - training_network
    env_file:
      - ./user-management/.env

volumes:
  postgres_data:
